pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS_ID = 'docker-hub'
        DOCKERHUB_USERNAME = 'jayant1054'
        IMAGE_NAME = 'movie-recommender'
        GITHUB_REPO_URL = 'https://github.com/jayantarunsingh/Movies.git'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "${GITHUB_REPO_URL}"
                echo "Checked out branch: ${env.GIT_BRANCH}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest")
                }
            }
        }

        stage('Login and Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS_ID}") {
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest").push()
                    }
                }
            }
        }

        // stage('Deploy Container') {
        //     steps {
        //         bat 'docker stop movie-app || echo Container not running'
        //         bat 'docker rm movie-app || echo Container not found'
        //         bat 'docker pull jayant1054/movie-recommender:latest'
        //         bat 'docker run -d -p 8080:80 --name movie-app jayant1054/movie-recommender:latest'
        //     }
        // }
        stage('Deploy Container') {
    steps {
        bat 'docker compose down || echo "No containers to stop"'  // Stop and remove any running containers
        bat 'docker compose pull'                                   // Pull latest image (if using external image)
        bat 'docker compose up -d --build'                          // Rebuild and start in detached mode
    }
}
    }

    post {
        always {
            cleanWs()
        }
    }
}
